

.blur {
  color: transparent;
  text-shadow: 0 0 5px rgba(0,0,0,0.5);
}

.navigation {
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-end;
  
  list-style: none;
  margin: 0; 
  background:black;
}

.navigation a {
  text-decoration: none;
  display: block;
  padding: 1em;
  color: white;
  background-color: black;
}

/*I love me some border-box*/
* {
  box-sizing: border-box;
}
/*This just stops me getting horizontal scrolling if anything overflows the width*/
body {
  overflow-x: hidden;
  background-color: black;
}
/*Just removing default browser padding/margin*/
html,
body {
  padding: 0;
  margin: 0;
  color: black;
}
/*Flexbox gives us the flexiness we need. The top just stays put as there is no scrolling on the body due to the page never exceeding viewport height*/
.Top {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: darkgreen;
  font-size: 3rem;
  position: relative;
  z-index: 10;
  height: 100px;
}
/*This is our main wrapping element, it's made 100vh high to ensure it is always the correct size and then moved into place and padded with negative margin and padding*/
.Container {
  display: flex;
  overflow: hidden;
  height: 100vh;
  margin-top: -100px;
  padding-top: 100px;
  position: relative;
  width: 100%;
  backface-visibility: hidden;
  will-change: overflow;
}
/*All the scrollable sections should overflow and be whatever height they need to be. As they are flex-items (due to being inside a flex container) they could be made to stretch full height at all times if needed.
WebKit inertia scrolling is being added here for any present/future devices that are able to make use of it.
*/
.Left,
.Middle,
.Right {
  overflow: auto;
  height: auto;
  padding: 1rem;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: none;
}
/*Entirely optional â€“ just wanted to remove the scrollbar on WebKit browsers as I find them ugly*/
.Left::-webkit-scrollbar,
.Middle::-webkit-scrollbar,
.Right::-webkit-scrollbar {
  display: none;
}
/*  Left and Right are set sizes while the Middle is set to flex one so it occupies all remaining space. This could be set as a width too if prefereable, perhaps using calc.*/
.Left {
  flex: 2;
  color: white;
  font-family: 'Arial Narrow';
  font-size: 2em;
  font-weight: 300;
  line-height: 1.35;
  padding-right: 5em;
  
  
}

.Middle {
  flex: 2;
  font-size: 2em;
  color: white;
 
  
}

/* .Right {
  width: 12.5rem;
  background-color: violet;
} */


a:link {
  color: white;
  text-decoration:none;
  /* letter-spacing: 1; */
}

/* visited link */
a:visited {
  color:white;
  text-decoration:none;
}

.name {
  flex: 2;
  color: white;
  font-family: 'Arial Narrow';
  font-size: .4em;
  font-weight: 300;
  line-height: 1.35;
  text-indent: 10px;

}

.institutional {
  font-size: 1em;
  color: white;
}